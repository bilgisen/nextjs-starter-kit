'use client';

import React, { useState, useCallback } from 'react';
import { useRouter, useParams } from 'next/navigation';
import { Plus } from 'lucide-react';
import { toast } from 'sonner';
import { Button } from "@/components/ui/button";
import { useGetChapters } from "@/queries/books/chapters/get-chapters";
import { useGetBook } from "@/queries/books/get-book";
import { RstChapterTree } from "@/components/books/chapters/rst-chapter-tree";
import { ChapterNode } from '@/types/dnd';

export default function NewChaptersPage() {
  const params = useParams();
  const router = useRouter();
  const bookSlug = typeof params?.slug === "string" ? params.slug : "";
  
  // Get book data
  const { data: book, isLoading: isLoadingBook } = useGetBook(bookSlug, { bySlug: true });
  const bookId = book?.id || "";
  
  // Get chapters
  const { 
    data: chapters = [], 
    isLoading: isLoadingChapters, 
    refetch: refetchChapters
  } = useGetChapters(bookId);

  // Handle chapter updates
  const handleSave = useCallback(async (updatedChapters: ChapterNode[]) => {
    try {
      // TODO: Call API to save the new order
      console.log('Saving chapters:', updatedChapters);
      toast.success('Chapter order updated successfully');
      await refetchChapters();
    } catch (error) {
      console.error('Error updating chapter order:', error);
      toast.error('Failed to update chapter order');
    }
  }, [refetchChapters]);

  // Handle navigation
  const handleAddChapter = () => {
    router.push(`/dashboard/books/${bookSlug}/chapters/new`);
  };

  const handleEdit = (chapterId: string) => {
    router.push(`/dashboard/books/${bookSlug}/chapters/${chapterId}/edit`);
  };

  const handleView = (chapterId: string) => {
    router.push(`/dashboard/books/${bookSlug}/chapters/${chapterId}`);
  };

  if (isLoadingBook || isLoadingChapters) {
    return <div className="flex items-center justify-center h-64">Loading chapters...</div>;
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-semibold">Chapters</h1>
          <p className="text-muted-foreground">
            Organize and manage your book's chapters
          </p>
        </div>
        <Button onClick={handleAddChapter}>
          <Plus className="mr-2 h-4 w-4" /> Add Chapter
        </Button>
      </div>

      <div className="rounded-lg border p-6">
        {chapters.length > 0 ? (
          <RstChapterTree 
            chapters={chapters}
            onSave={handleSave}
          />
        ) : (
          <div className="text-center py-12">
            <p className="text-muted-foreground mb-4">No chapters found</p>
            <Button onClick={handleAddChapter}>
              <Plus className="mr-2 h-4 w-4" /> Create your first chapter
            </Button>
          </div>
        )}
      </div>
    </div>
  );
}
